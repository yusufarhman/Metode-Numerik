#include <stdio.h>

void tampilkanMatriks(float matriks[][10], int n) {
    for(int i = 0; i < n; i++) {
        for(int j = 0; j <= n; j++) {
            printf("%.2f\t", matriks[i][j]);
        }
        printf("\n");
    }
    printf("\n");
}

void eliminasiGauss(float matriks[][10], int n) {
    float temp;
    // Langkah eliminasi maju
    for(int i = 0; i < n; i++) {
        
        temp = matriks[i][i];
        for(int j = i; j <= n; j++) {
            matriks[i][j] = matriks[i][j] / temp;
        }
        
        // Eliminasi kolom
        for(int j = 0; j < n; j++) {
            if(i != j) {
                temp = matriks[j][i];
                for(int k = i; k <= n; k++) {
                    matriks[j][k] = matriks[j][k] - (matriks[i][k] * temp);
                }
            }
        }
        
        printf("Langkah %d:\n", i + 1);
        tampilkanMatriks(matriks, n);
    }
}

int main() {
    float matriks[10][10];
    int n;
    
    printf("Masukkan ukuran matriks (maksimal 10): ");
    scanf("%d", &n);
    
    printf("Masukkan elemen matriks augmented [A|b]:\n");
    for(int i = 0; i < n; i++) {
        for(int j = 0; j <= n; j++) {
            printf("Matriks[%d][%d]: ", i+1, j+1);
            scanf("%f", &matriks[i][j]);
        }
    }
    
    printf("\nMatriks awal:\n");
    tampilkanMatriks(matriks, n);
    
    eliminasiGauss(matriks, n);
    
    printf("Solusi:\n");
    for(int i = 0; i < n; i++) {
        printf("x%d = %.2f\n", i+1, matriks[i][n]);
    }
    
    return 0;
}
